on:
  push:
    branches:
      - master
      - release-4.0
      - release-5.*
  pull_request:
    branches:
      - master
      - release-4.0
      - release-5.*

name: PD Tests

jobs:
  chunks:
    runs-on: [self-hosted,X64]
    strategy:
      fail-fast: true
      matrix:
        worker_id: [1, 2, 3, 4]
    outputs:
      job-total: ${{ strategy.job-total }}
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Dispatch Packages
        id: packages-units
        env:
          WORKER_ID: ${{ matrix.worker_id }}
        run: |
          go list ./... |grep -v -E  "github.com/tikv/pd/tests/client|github.com/tikv/pd/server/api" > packages.list
          total=$(expr ${{ strategy.job-total }} - 1)
          echo  "Dispatched ${total} normal chunks"
          split packages.list -n r/${total} packages_unit_ -a 1 --numeric-suffixes=1
          echo  "Dispatched 2 special task to the last chunk(the special test takes a long time)"
          echo github.com/tikv/pd/tests/client > packages_unit_${{ strategy.job-total }}
          echo github.com/tikv/pd/server/api >> packages_unit_${{ strategy.job-total }}
          packages="{$(cat packages_unit_${WORKER_ID} |tr "\n" ",")}"
          echo "This worker will test the chunk - ${packages}"
          echo "::set-output name=list::${packages}"
      - name: Make Test
        env:
          WORKER_ID: ${{ matrix.worker_id }}
        run: |
          make test-with-cover TEST_PKGS="${{ steps.packages-units.outputs.list }}"
          mv covprofile covprofile_$WORKER_ID
          sed -i "/failpoint_binding/d" covprofile_$WORKER_ID
      - name: Upload coverage result ${{ matrix.worker_id }}
        uses: actions/upload-artifact@v2
        with:
          name: cover-reports
          path: covprofile_${{ matrix.worker_id }}
  report-coverage:
    needs: chunks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download chunk report
        uses: actions/download-artifact@v2
        with:
          name: cover-reports
      - name: Merge
        env:
          TOTAL_JOBS: ${{needs.chunks.outputs.job-total}}
        run: |
          echo ${TOTAL_JOBS}
          for i in $(seq 1 $TOTAL_JOBS); do cat covprofile_$i >> covprofile; done
          cat covprofile
      - name: Send coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV }}
          file: ./covprofile
          flags: unittests
          name: codecov-umbrella
